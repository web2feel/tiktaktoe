{"version":3,"sources":["scripts/script.js"],"names":["crossTurn","winner","board","document","querySelector","blocks","querySelectorAll","reset","crossPlayer","circlePlayer","allwincombos","initBoard","Math","random","forEach","block","style","display","classList","remove","removeEventListener","handleClick","addEventListener","setBoard","e","preventDefault","target","currentTurn","playBlock","checkWin","gameEnd","i","setTimeout","add","checkDraw","gameDraw","switchTurn","Array","from","every","contains","some","combo","index","innerText","toUpperCase"],"mappings":";;;;;AAgHC,aAhHD,QAAA,sBAEA,IAKIA,EACAC,EANAC,EAAQC,SAASC,cAAc,UAC/BC,EAASF,SAASG,iBAAiB,UACnCC,EAAQJ,SAASC,cAAc,UAC/BI,EAAc,QACdC,EAAe,SAIfC,EAAe,CACjB,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,IAST,SAASC,IACPX,EAAYY,KAAKC,UAAY,GAC7BR,EAAOS,QAAQ,SAACC,GACdZ,SAASC,cAAc,SAASY,MAAMC,QAAtC,OACAF,EAAMG,UAAUC,OAAOV,GACvBM,EAAMG,UAAUC,OAAOX,GACvBO,EAAMG,UAAUC,OAAO,OACvBjB,EAAMgB,UAAUC,OAAO,YACvBJ,EAAMK,oBAAoB,QAASC,GACnCN,EAAMK,oBAAoB,aAAcC,GACxCN,EAAMO,iBAAiB,QAASD,GAChCN,EAAMO,iBAAiB,aAAcD,KAEvCE,IAGF,SAASF,EAAYG,GACnBA,EAAEC,iBACEV,IAAAA,EAAQS,EAAEE,OACVC,EAAc3B,EAAYQ,EAAcC,EAC5CmB,EAAUb,EAAOY,GAEbE,EAASF,IACXG,EAAQH,GACR1B,EAAOa,QAAQ,SAACb,EAAQ8B,GACtBC,WAAW,WACT3B,EAAOJ,GAAQiB,UAAUe,IAAI,QACxB,IAAJF,KAEL7B,EAAMgB,UAAUe,IAAI,aACXC,IACTC,KAEAC,IACAb,KAIJ,SAASK,EAAUb,EAAOY,GACxBZ,EAAMG,UAAUe,IAAIN,GAGtB,SAASS,IACPpC,GAAaA,EAGf,SAASuB,IACPrB,EAAMgB,UAAUC,OAAOX,GACvBN,EAAMgB,UAAUC,OAAOV,GACnBT,EACFE,EAAMgB,UAAUe,IAAIzB,GAEpBN,EAAMgB,UAAUe,IAAIxB,GAIxB,SAASyB,IACAG,OAAAA,MAAMC,KAAKjC,GAAQkC,MAAM,SAACxB,GAE7BA,OAAAA,EAAMG,UAAUsB,SAAShC,IACzBO,EAAMG,UAAUsB,SAAS/B,KAK/B,SAASoB,EAASF,GACTjB,OAAAA,EAAa+B,KAAK,SAACC,GACjBA,OAAAA,EAAMH,MAAM,SAACI,GAEXtC,OADPJ,EAASyC,EACFrC,EAAOsC,GAAOzB,UAAUsB,SAASb,OAK9C,SAASG,EAAQH,GACfK,WAAW,WACT7B,SAASC,cAAc,SAASY,MAAMC,QAAtC,OACAd,SAASC,cACP,eACAwC,UAAejB,GAAAA,OAAAA,EAAYkB,cAF7B,mBAGC,KAEL,SAASV,IACPhC,SAASC,cAAc,SAASY,MAAMC,QAAtC,OACAd,SAASC,cAAc,eAAewC,UAAtC,iBA1FFjC,IAEAJ,EAAMe,iBAAiB,QAAS,WAC9BX","file":"script.5f657958.js","sourceRoot":"..","sourcesContent":["import \"/styles/style.scss\";\n\nlet board = document.querySelector(\"#board\");\nlet blocks = document.querySelectorAll(\".block\");\nlet reset = document.querySelector(\".reset\");\nlet crossPlayer = \"cross\";\nlet circlePlayer = \"circle\";\nlet crossTurn;\nlet winner;\n\nlet allwincombos = [\n  [0, 1, 2],\n  [3, 4, 5],\n  [6, 7, 8],\n  [0, 3, 6],\n  [1, 4, 7],\n  [2, 5, 8],\n  [0, 4, 8],\n  [2, 4, 6],\n];\n\ninitBoard();\n\nreset.addEventListener(\"click\", () => {\n  initBoard();\n});\n\nfunction initBoard() {\n  crossTurn = Math.random() >= 0.5;\n  blocks.forEach((block) => {\n    document.querySelector(\"#info\").style.display = `none`;\n    block.classList.remove(circlePlayer);\n    block.classList.remove(crossPlayer);\n    block.classList.remove(\"win\");\n    board.classList.remove(\"disabled\");\n    block.removeEventListener(\"click\", handleClick);\n    block.removeEventListener('touchstart', handleClick)\n    block.addEventListener(\"click\", handleClick);\n    block.addEventListener('touchstart', handleClick)\n  });\n  setBoard();\n}\n\nfunction handleClick(e) {\n  e.preventDefault();\n  let block = e.target;\n  let currentTurn = crossTurn ? crossPlayer : circlePlayer;\n  playBlock(block, currentTurn);\n\n  if (checkWin(currentTurn)) {\n    gameEnd(currentTurn);\n    winner.forEach((winner, i) => {\n      setTimeout(() => {\n        blocks[winner].classList.add(\"win\");\n      }, i * 100);\n    });\n    board.classList.add(\"disabled\");\n  } else if (checkDraw()) {\n    gameDraw();\n  } else {\n    switchTurn();\n    setBoard();\n  }\n}\n\nfunction playBlock(block, currentTurn) {\n  block.classList.add(currentTurn);\n}\n\nfunction switchTurn() {\n  crossTurn = !crossTurn;\n}\n\nfunction setBoard() {\n  board.classList.remove(crossPlayer);\n  board.classList.remove(circlePlayer);\n  if (crossTurn) {\n    board.classList.add(crossPlayer);\n  } else {\n    board.classList.add(circlePlayer);\n  }\n}\n\nfunction checkDraw() {\n  return Array.from(blocks).every((block) => {\n    return (\n      block.classList.contains(crossPlayer) ||\n      block.classList.contains(circlePlayer)\n    );\n  });\n}\n\nfunction checkWin(currentTurn) {\n  return allwincombos.some((combo) => {\n    return combo.every((index) => {\n      winner = combo;\n      return blocks[index].classList.contains(currentTurn);\n    });\n  });\n}\n\nfunction gameEnd(currentTurn) {\n  setTimeout(() => {\n    document.querySelector(\"#info\").style.display = `flex`;\n    document.querySelector(\n      \".endMessage\"\n    ).innerText = `${currentTurn.toUpperCase()} Wins the Game`;\n  }, 400);\n}\nfunction gameDraw() {\n  document.querySelector(\"#info\").style.display = `flex`;\n  document.querySelector(\".endMessage\").innerText = `Game is a Draw`;\n}\n"]}